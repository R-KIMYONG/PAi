const getTodoSystemMessage = (todoRequestType: string, currentTodoList: string[]) => {
  switch (todoRequestType) {
    case "create":
      return "사용자가 투두리스트를 작성하려고 합니다. '네, 원하는 투두리스트를 작성해주세요. 각 항목을 쉼표로 구분해 입력해주세요.'라고 안내해주세요.";
    case "start":
      return "사용자가 새로운 투두리스트를 작성하려고 합니다. '네, 새로운 투두리스트를 작성하겠습니다. 어떤 항목들을 추가하고 싶으신가요? 각 항목을 쉼표로 구분해 입력해주세요.'라고 안내해주세요.";
    case "add":
      return `사용자가 투두리스트에 항목을 추가하려고 합니다. 현재 리스트: ${currentTodoList.join(",")}. 새로운 항목을 기존 리스트에 추가하고, 전체 리스트를 보여주세요. 각 항목을 별도의 줄에 나열하고, 글머리 기호나 번호를 사용하지 마세요. 리스트만 나열하고 다른 이야기는 하지 않도록 하세요. 추가되었다는 이야기도 할 필요 없습니다.`;
    case "list":
      return "사용자가 전체 투두리스트를 보여달라고 요청했습니다. 현재의 모든 투두 항목을 보여주세요. 각 항목을 별도의 줄에 나열하고 글머리 기호나 번호를 사용하지 말고, 항목 내용만 나열해주세요. 리스트만 나열하고 다른 이야기는 하지 않도록 하세요. 추가되었다는 이야기도 할 필요 없습니다. 예를 들어:\n항목1\n항목2\n항목3";

    default:
      return `사용자가 투두리스트를 작성 중입니다. 현재 리스트: ${currentTodoList.join(", ")}. 새로운 항목을 추가하거나 기존 항목을 수정할 수 있습니다. 각 항목 앞에 '• '를 붙여 나열해주세요. 투두리스트가 완성되면 '투두리스트 작성이 완료되었습니다.'라고 말해주세요.`;
  }
};
